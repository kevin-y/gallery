<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">

   
    <context:component-scan base-package="org.keviny.gallery"/>
    

	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp'
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean> -->
	
	
	<bean id="customizedObjectMapper" class="org.keviny.gallery.common.CustomizedObjectMapper" />
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
	<mvc:message-converters>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper" ref="customizedObjectMapper" />
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- ContentNegotiationManager  -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
				<entry key="html" value="text/html"/>
			</map>
		</property>
		<property name="defaultContentType" value="application/json" />
	</bean>
	 <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
					  p:objectMapper-ref="customizedObjectMapper" />
			</list>
		</property>
	</bean>
	
	<context:property-placeholder location="classpath:config.properties"/>
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.user}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="galleryPU" />
    	<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.keviny.gallery.rdb" />
    </bean>      
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- MongoDB Configurations -->
    <mongo:mongo  host="${mongo.host}" port="${mongo.port}" />
	<mongo:db-factory mongo-ref="mongo" dbname="FILE_STORAGE_db" username="${mongo.user}" password="${mongo.password}" />
	<mongo:template  db-factory-ref="mongoDbFactory"/>
	<mongo:mapping-converter id="mappingConverter" />
	<mongo:gridFsTemplate db-factory-ref="mongoDbFactory" converter-ref="mappingConverter"/>

   	<!-- RabbitMQ Configurations -->
	<rabbit:annotation-driven />
   	<rabbit:connection-factory id="rabbitConnectionFactory" requested-heartbeat="20" host="${rabbit.host}"
		port="${rabbit.port}" username="${rabbit.user}" password="${rabbit.password}" />
		
	<bean id="mqMessageConverter"
		class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter">
		<property name="jsonObjectMapper" ref="customizedObjectMapper"/>
	</bean>


    <rabbit:admin connection-factory="rabbitConnectionFactory" />

	<rabbit:queue auto-delete="true" durable="false" id="imageQueue" name="imageQueue" />

	<rabbit:topic-exchange  name="gallery.image" durable="true" auto-delete="false" >
		<rabbit:bindings>
			<rabbit:binding pattern="gallery.image.new" queue="imageQueue"/>
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<rabbit:template id="amqpTemplate" connection-factory="rabbitConnectionFactory"
		message-converter="mqMessageConverter">
	</rabbit:template>
	<!--<rabbit:listener-container concurrency="2" connection-factory="rabbitConnectionFactory" acknowledge="auto" message-converter="mqMessageConverter" />-->

	<rabbit:listener-container concurrency="2" connection-factory="rabbitConnectionFactory" acknowledge="auto" message-converter="mqMessageConverter">
		<rabbit:listener ref="imageMessageHandler" queues="imageQueue" />
	</rabbit:listener-container>

   	<!-- Redis Configurations -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" />					  
	 <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	 	<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	 </bean>
	 <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
	 	   p:connection-factory-ref="jedisConnectionFactory"/>

   	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize"  value="20000000" />  
    </bean>  
</beans>
